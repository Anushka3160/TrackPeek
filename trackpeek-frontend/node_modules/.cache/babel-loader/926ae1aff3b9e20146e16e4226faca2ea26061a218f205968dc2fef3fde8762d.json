{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\anush\\\\Code\\\\trackpeek\\\\src\\\\ScanProcessing.jsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport { useNavigate, useParams } from 'react-router-dom';\nimport axios from 'axios';\nimport styles from './ScanProcessing.module.css';\n\n// Importing ProgressBar from react-bootstrap\nimport ProgressBar from 'react-bootstrap/ProgressBar';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction ScanProcessing() {\n  _s();\n  const navigate = useNavigate();\n  const {\n    scanId\n  } = useParams();\n  const [progress, setProgress] = useState(0);\n  useEffect(() => {\n    const interval = setInterval(async () => {\n      try {\n        const res = await axios.get(`http://localhost:3001/api/scan/progress/${scanId}`);\n        setProgress(res.data.progress);\n        if (res.data.progress >= 100 || res.data.status === 'done') {\n          clearInterval(interval);\n\n          // Automatically redirect to summary page\n          navigate(`/scan-summary/${scanId}`);\n        }\n      } catch (error) {\n        console.error('Error fetching scan progress:', error);\n        clearInterval(interval);\n      }\n    }, 1000);\n    return () => clearInterval(interval);\n  }, [scanId, navigate]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: styles.container,\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: styles.card,\n      children: [/*#__PURE__*/_jsxDEV(\"img\", {\n        className: styles.cardimg,\n        src: \"/logo.webp\",\n        alt: \"TrackPeeK\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n        className: styles.heading,\n        children: \"TrackPeek\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: styles.progressBarContainer,\n        children: /*#__PURE__*/_jsxDEV(ProgressBar, {\n          animated: true,\n          now: progress,\n          label: `${progress}%`\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n        className: styles.heading,\n        children: [\"Scanning... \", progress, \"%\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 36,\n    columnNumber: 5\n  }, this);\n}\n_s(ScanProcessing, \"xUzHGlrOGiRsEUQFoEMmHYUrlzI=\", false, function () {\n  return [useNavigate, useParams];\n});\n_c = ScanProcessing;\nexport default ScanProcessing;\nvar _c;\n$RefreshReg$(_c, \"ScanProcessing\");","map":{"version":3,"names":["React","useEffect","useState","useNavigate","useParams","axios","styles","ProgressBar","jsxDEV","_jsxDEV","ScanProcessing","_s","navigate","scanId","progress","setProgress","interval","setInterval","res","get","data","status","clearInterval","error","console","className","container","children","card","cardimg","src","alt","fileName","_jsxFileName","lineNumber","columnNumber","heading","progressBarContainer","animated","now","label","_c","$RefreshReg$"],"sources":["C:/Users/anush/Code/trackpeek/src/ScanProcessing.jsx"],"sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport { useNavigate, useParams } from 'react-router-dom';\r\nimport axios from 'axios';\r\nimport styles from './ScanProcessing.module.css';\r\n\r\n// Importing ProgressBar from react-bootstrap\r\nimport ProgressBar from 'react-bootstrap/ProgressBar';\r\n\r\nfunction ScanProcessing() {\r\n  const navigate = useNavigate();\r\n  const { scanId } = useParams();\r\n  const [progress, setProgress] = useState(0);\r\n\r\n  useEffect(() => {\r\n    const interval = setInterval(async () => {\r\n      try {\r\n        const res = await axios.get(`http://localhost:3001/api/scan/progress/${scanId}`);\r\n        setProgress(res.data.progress);\r\n\r\n        if (res.data.progress >= 100 || res.data.status === 'done') {\r\n          clearInterval(interval);\r\n\r\n          // Automatically redirect to summary page\r\n          navigate(`/scan-summary/${scanId}`);\r\n        }\r\n      } catch (error) {\r\n        console.error('Error fetching scan progress:', error);\r\n        clearInterval(interval);\r\n      }\r\n    }, 1000);\r\n\r\n    return () => clearInterval(interval);\r\n  }, [scanId, navigate]);\r\n\r\n  return (\r\n    <div className={styles.container}>\r\n      <div className={styles.card}>\r\n        <img className={styles.cardimg} src='/logo.webp' alt='TrackPeeK' />\r\n        <h1 className={styles.heading}>TrackPeek</h1>\r\n\r\n        {/* Replace custom progress bar with react-bootstrap's ProgressBar */}\r\n        <div className={styles.progressBarContainer}>\r\n          <ProgressBar animated now={progress} label={`${progress}%`} />\r\n        </div>\r\n\r\n        <h2 className={styles.heading}>Scanning... {progress}%</h2>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default ScanProcessing;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}