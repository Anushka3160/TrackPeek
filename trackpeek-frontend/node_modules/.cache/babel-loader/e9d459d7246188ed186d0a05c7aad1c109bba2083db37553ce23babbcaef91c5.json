{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\anush\\\\Code\\\\trackpeek\\\\src\\\\Scan.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Scan() {\n  _s();\n  const [url, setUrl] = useState('');\n  const navigate = useNavigate();\n  const handleChange = e => {\n    setUrl(e.target.value);\n  };\n  const handleScan = () => {\n    if (url.trim()) {\n      // Pass the URL to another route if needed using state or params\n      navigate('/scan-processing');\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Scan a Website\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      value: url,\n      onChange: handleChange,\n      placeholder: \"Enter website URL\",\n      style: {\n        padding: '8px',\n        width: '300px',\n        marginRight: '10px'\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleScan,\n      children: \"Scan Me\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 20,\n    columnNumber: 5\n  }, this);\n}\n_s(Scan, \"C8LUpRXF+0AdTfqt9MBhPVq1Saw=\", false, function () {\n  return [useNavigate];\n});\n_c = Scan;\nexport default Scan;\nvar _c;\n$RefreshReg$(_c, \"Scan\");","map":{"version":3,"names":["React","useState","useNavigate","jsxDEV","_jsxDEV","Scan","_s","url","setUrl","navigate","handleChange","e","target","value","handleScan","trim","className","children","fileName","_jsxFileName","lineNumber","columnNumber","type","onChange","placeholder","style","padding","width","marginRight","onClick","_c","$RefreshReg$"],"sources":["C:/Users/anush/Code/trackpeek/src/Scan.jsx"],"sourcesContent":["import React, { useState } from 'react';\r\nimport { useNavigate } from 'react-router-dom';\r\n\r\nfunction Scan() {\r\n  const [url, setUrl] = useState('');\r\n  const navigate = useNavigate();\r\n\r\n  const handleChange = (e) => {\r\n    setUrl(e.target.value);\r\n  };\r\n\r\n  const handleScan = () => {\r\n    if (url.trim()) {\r\n      // Pass the URL to another route if needed using state or params\r\n      navigate('/scan-processing'); \r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"container\">\r\n      <h2>Scan a Website</h2>\r\n      <input\r\n        type=\"text\"\r\n        value={url}\r\n        onChange={handleChange}\r\n        placeholder=\"Enter website URL\"\r\n        style={{ padding: '8px', width: '300px', marginRight: '10px' }}\r\n      />\r\n      <button onClick={handleScan}>Scan Me</button>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Scan;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,SAASC,WAAW,QAAQ,kBAAkB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE/C,SAASC,IAAIA,CAAA,EAAG;EAAAC,EAAA;EACd,MAAM,CAACC,GAAG,EAAEC,MAAM,CAAC,GAAGP,QAAQ,CAAC,EAAE,CAAC;EAClC,MAAMQ,QAAQ,GAAGP,WAAW,CAAC,CAAC;EAE9B,MAAMQ,YAAY,GAAIC,CAAC,IAAK;IAC1BH,MAAM,CAACG,CAAC,CAACC,MAAM,CAACC,KAAK,CAAC;EACxB,CAAC;EAED,MAAMC,UAAU,GAAGA,CAAA,KAAM;IACvB,IAAIP,GAAG,CAACQ,IAAI,CAAC,CAAC,EAAE;MACd;MACAN,QAAQ,CAAC,kBAAkB,CAAC;IAC9B;EACF,CAAC;EAED,oBACEL,OAAA;IAAKY,SAAS,EAAC,WAAW;IAAAC,QAAA,gBACxBb,OAAA;MAAAa,QAAA,EAAI;IAAc;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eACvBjB,OAAA;MACEkB,IAAI,EAAC,MAAM;MACXT,KAAK,EAAEN,GAAI;MACXgB,QAAQ,EAAEb,YAAa;MACvBc,WAAW,EAAC,mBAAmB;MAC/BC,KAAK,EAAE;QAAEC,OAAO,EAAE,KAAK;QAAEC,KAAK,EAAE,OAAO;QAAEC,WAAW,EAAE;MAAO;IAAE;MAAAV,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAChE,CAAC,eACFjB,OAAA;MAAQyB,OAAO,EAAEf,UAAW;MAAAG,QAAA,EAAC;IAAO;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAC1C,CAAC;AAEV;AAACf,EAAA,CA5BQD,IAAI;EAAA,QAEMH,WAAW;AAAA;AAAA4B,EAAA,GAFrBzB,IAAI;AA8Bb,eAAeA,IAAI;AAAC,IAAAyB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}